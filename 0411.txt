input type에 span 코드를 display: block;
position: absolute;를 사용해서

input태그의 span 3개에 cursor: posinter;를 줄 때
세 줄을 x자로 변화시킨다

  transform-origin: 4px 0px;
  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1.0),
    background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1.0),
    opacity 0.55s ease;

ease 부분이 easing 가속도 관련 제어

cubic-bezier: 3차원 곡선?

첫번째 span과 두번째 span만 
두번째 span
  transform-origin: 0% 100%;

input의 체크된 span은
  opacity: 1;
  transform: rotate(45deg) translate(-2px, -1px);

span 중 마지막 span은 체크되면 
  opacity: 0;
  transform: rotate(0deg) scale(0.2, 0.2);

https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth
폰트가 깨지지 않도록 해줌
antialiased: 위신호 제거
= 높은 해상도에서 낮은 해상도가 깨지지 않도록 해줌
  -webkit-font-smoothing: antialiased;

transition을 부분적으로 줄 수도 있다
  transition: color 0.3s ease;
  // 컬러값에만 가속도 변화를 부여한 화면전환을 진행 시키겠다는 뜻

https://developer.mozilla.org/ko/docs/Web/CSS/user-select
사용자가 텍스트를 선택을 할 수 있는지 지정함
  user-select: none;

구문
none
이 요소와 아래 요소의 텍스트를 선택하지 못하도록 막습니다. 단 Selection 객체는 none인 요소(와 그 아래)를 포함할 수 있습니다.
auto
auto의 사용값은 아래와 같이 결정됩니다.

::before와 ::after 의사 요소의 사용값은 none입니다.
편집 가능한 요소의 사용값은 contain입니다.
그렇지 않고, 부모 요소 user-select의 사용값이 all이면 이 요소의 사용값도 all입니다.
그렇지 않고, 부모 요소 user-select의 사용값이 none이면 이 요소의 사용값도 none입니다.
그렇지 않으면 사용값은 text입니다.
text
사용자가 텍스트를 선택할 수 있습니다.
all
요소의 콘텐츠가 원자적으로 선택됩니다. 즉 선택 범위는 이 요소와 그 아래의 자손 전체를 포함해야 하며 일부만 담을 수는 없습니다. 하위 요소에서 더블 클릭이나 콘텍스트 클릭이 발생한 경우, all을 지정한 조상 요소 중 제일 상위 요소를 선택합니다.
contain
선택의 시작을 이 요소 안에서 한 경우, 범위가 요소 바깥으로 벗어날 수 없습니다.

<a href>
a태그 링크를 통함
그러나 위의 속성을 부여하면 이 url이 클릭되지 않도록 한 것이다

display none을 사용하면 요소 자체를 사라지게 할 수 있지만, 요소 자체가 사라져 폭이 줄어드는 현상이 발견됨
  display: none;

-------------------------------------------

text-decoration: none;
= 텍스트 자체에 적용된 효과 없앰

transition: color 0.3s ease;
= 이행: color부분에만 0.3초의 가속도;

// !input type="checkbox"이기 때문에 체크된 span태그

    // !--------------------여기부터-------------------
    &:checked~span{
      // 불투명도
      opacity: 1;
      // !translate: 요소의 위치 변경
      // 
      transform: rotate(45deg) translate(-2px -1px);
      background: #333;
    }
    // &:checked~span:nth-child(1){
    //   transform: rotate(-45deg) translate(-2px -1px);
    //   background: #333;
    // }
    &:checked~span:nth-last-child(3){
      opacity: 0;
      transform: rotate(0deg) scale(0.2, 0.2);
    }
    &:checked~span:nth-last-child(2){
      transform: rotate(-45deg) translate(0, -1px);
      background: #333;

    }
    // !--------------------여기까지-------------------
span{
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    background: #ccc;
    border-radius: 3px;
    // !사실 이 부분은 직접적인 체크박스(=input)가 아니라 선택하는 부분에 깔린 부분이다 직접적인 선택이 아니라 밑의 인터랙션이 보여지는 부분
    z-index: 1;
    // ?https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin
    // transform-origin: x-offset y-offset;
    // ? 이 부분이 움직임을 주는 부분이라는 것은 알겠지만 cubic-bezier가 정확히 뭘 의미하는지는 잘 모르겠음
    // https://cubic-bezier.com/#.17,.67,.83,.67
    // !예를 들면 에펙이나 프리미어의 그래프에서 효과 움직임을 조절할 때 사용하는 그래프와 비슷한 것 같다, 근데 숫자로 보니까 잘 모르겠는 점....
    // https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function
    transform-origin: 4px 0px;
    transition: transform .5s cubic-bezier(0.77, 0.2, 0.05, 1.0), background .5s cubic-bezier(0.77, 0.2, 0.05, 1.0), opacity .55s ease;
    // easing : 가속도 관련 제어
    // bezier: 곡선
    // 움직임을 제어할때 '등속도'만으로는 표현하기 어려운 탄력을 부여하기위해 모션등에서 매우 자주 활용
    
    // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin
    // !그래픽 툴에서 중심점을 옮겨주는 것과 같은 원리
    &:first-child{
      // x-offset y-offset;
      transform-origin: 0% 0%;
    }
    // https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-child
    // !nth-child()와 반대로 마지막부터 계산
    &:nth-last-child(2){
      transform-origin: 0% 100%;
    }
  }
}
#menu{
  // menu con setting을 위한 속성부여
  position: absolute;
  width: 300px;
  height: 100vh;
  
  // marign set
  margin: -100px 0 0 -50px;
  padding: 50px;
  padding-top: 125px;

  background: #ededed;
  list-style-type: none;
  // !고해상도에서 저해상도의 폰트가 깨지지 않도록 smoothing 해주는 작업이라고 함
  -webkit-font-smoothing: antialiased;
  // !그래픽 툴에서 중심점을 옮겨주는 것과 같은 원리
  transform-origin: 0% 0%;
  // ?접어두는 효과
  transform: translate(-100%, 0);
  // 이행: 변환 0.5초 동안 cubic-bezier를 찍은 곡선 그래프의 값을 따라서 인터랙션을 줌
  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);
  li{
    // 상하 좌우;
    padding: 10px 0;
    font-size: 22px;
  }
}

순서를 잘 두는 것도 중요하다
=> 순서에 따라서 움직여야할 부분이 안 움직이는 경우도 많음