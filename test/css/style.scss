* {
  margin: 0;
  padding: 0;

  background-color: #333;
  color: #ccc;
}

#menu-toggle {
  display: block;

  position: relative;
  top: 50px;
  left: 50px;
  z-index: 1;
  // !user기 선택하지 않았을 때
  user-select: none;

  &>a {
    // 밑줄을 없애준 작업
    text-decoration: none;
    color: #333;
    transition: color 0.3s ease;

    // ? 이 부분을 어디에 적용시켜야 할까??
    // 트랜지션을 color에만 적용 0.3s 가속도

    &:hover {
      color: salmon;
    }
  }

  &>input {
    display: block;
    width: 40px;
    height: 32px;
    // 어떤 상황이든 겹쳐져서 위에 나타나야 하는 부분
    position: absolute;
    top: -7px;
    left: -5px;
    // 이 부분에선 cursor를 pointer(손가락 모양의 포인터)로 준다
    cursor: pointer;
    // opacity를 조절해서 숨겨줌
    opacity: 0;
    // !input 태그를 겹쳐준 것이기 때문에 가장 위에 와서 체크되고 작동해야하는 것이기 때문에 z-index 값을 가장 높게 준 것
    z-index: 2;
    // !input type="checkbox"이기 때문에 체크된 span태그

    // !--------------------여기부터-------------------
  }

  span {
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    background: #ccc;
    border-radius: 3px;
    // !사실 이 부분은 직접적인 체크박스(=input)가 아니라 선택하는 부분에 깔린 부분이다 직접적인 선택이 아니라 밑의 인터랙션이 보여지는 부분
    z-index: 1;
    // ?https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin
    // transform-origin: x-offset y-offset;
    // ? 이 부분이 움직임을 주는 부분이라는 것은 알겠지만 cubic-bezier가 정확히 뭘 의미하는지는 잘 모르겠음
    // https://cubic-bezier.com/#.17,.67,.83,.67
    // !예를 들면 에펙이나 프리미어의 그래프에서 효과 움직임을 조절할 때 사용하는 그래프와 비슷한 것 같다, 근데 숫자로 보니까 잘 모르겠는 점....
    // https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function
    transform-origin: 4px 0px;
    transition: transform .5s cubic-bezier(0.77, 0.2, 0.05, 1.0), background .5s cubic-bezier(0.77, 0.2, 0.05, 1.0), opacity .55s ease;
    // easing : 가속도 관련 제어
    // bezier: 곡선
    // 움직임을 제어할때 '등속도'만으로는 표현하기 어려운 탄력을 부여하기위해 모션등에서 매우 자주 활용


  }

  // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin
  // !그래픽 툴에서 중심점을 옮겨주는 것과 같은 원리
  span:first-child {
    // x-offset y-offset;
    transform-origin: 0% 0%;
  }

  // https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-child
  // !nth-child()와 반대로 마지막부터 계산
  span:nth-last-child(2) {
    transform-origin: 0% 100%;
  }

  &>input:checked~span {
    // 불투명도
    opacity: 1;
    // !translate: 요소의 위치 변경
    // 
    transform: rotate(45deg) translate(-2px -1px);
    background: #333;
  }

  // &:checked~span:nth-child(1){
  //   transform: rotate(-45deg) translate(-2px -1px);
  //   background: #333;
  // }
  &>input:checked~span:nth-last-child(3) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
  }

  &>input:checked~span:nth-last-child(2) {
    transform: rotate(-45deg) translate(0, -1px);
    background: #333;

  }

  // !--------------------여기까지-------------------
  input:checked~ul {
    transform: none;
  }

}

#menu {
  // menu con setting을 위한 속성부여
  position: absolute;
  width: 300px;
  height: 100vh;

  // marign set
  margin: -100px 0 0 -50px;
  padding: 50px;
  padding-top: 125px;

  background: #ededed;
  list-style-type: none;
  // !고해상도에서 저해상도의 폰트가 깨지지 않도록 smoothing 해주는 작업이라고 함
  -webkit-font-smoothing: antialiased;
  // !그래픽 툴에서 중심점을 옮겨주는 것과 같은 원리
  transform-origin: 0% 0%;
  // ?접어두는 효과
  transform: translate(-100%, 0);
  // 이행: 변환 0.5초 동안 cubic-bezier를 찍은 곡선 그래프의 값을 따라서 인터랙션을 줌
  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);

  li {
    // 상하 좌우;
    padding: 10px 0;
    font-size: 22px;
  }
}